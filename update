Fichier: src/Controller/AdminController.php
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/src/Controller/AdminController.php
-----
<?php
// src/Controller/AdminController.php

namespace App\Controller;

use App\Entity\User;
use App\Repository\UserRepository;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

#[Route('/admin')]
class AdminController extends AbstractController
{
#[Route('/', name: 'admin_dashboard')]
public function index(UserRepository $userRepo): Response
{
$jobSeekers = $userRepo->findBy(['type' => 'job_seeker']);
$companies = $userRepo->findBy(['type' => 'company']);

return $this->render('admin/index.html.twig', [
'jobSeekers' => $jobSeekers,
'companies' => $companies,
]);
}

#[Route('/company/approve/{id}', name: 'admin_approve_company')]
public function approveCompany(User $user, EntityManagerInterface $em): RedirectResponse
{
$user->setIsApproved(true);
$em->flush();

$this->addFlash('success', 'Entreprise approuvée avec succès !');
return $this->redirectToRoute('admin_dashboard');
}

#[Route('/company/reject/{id}', name: 'admin_reject_company')]
public function rejectCompany(User $user, EntityManagerInterface $em): RedirectResponse
{
$em->remove($user);
$em->flush();

$this->addFlash('danger', 'Entreprise rejetée.');
return $this->redirectToRoute('admin_dashboard');
}
}
==================================================

Fichier: src/Controller/AdminDemandesController.php
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/src/Controller/AdminDemandesController.php
-----
<?php

// src/Controller/AdminDemandesController.php
namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use App\Service\UserService;
use App\Entity\User; // ⬅️ Ajouté ici pour utiliser "User" dans array_filter

class AdminDemandesController extends AbstractController
{
    private UserService $userService;

    public function __construct(UserService $userService)
    {
        $this->userService = $userService;
    }

    #[Route('/admin/demandes', name: 'admin_demandes')]
    public function index(): Response
    {
        // Récupère toutes les entreprises
        $entreprises = $this->userService->findUsersByRole('ROLE_COMPANY');

        // Filtre celles non approuvées
        $entreprisesEnAttente = array_filter($entreprises, fn(User $user) => !$user->isApproved());

        return $this->render('admin/demandes/index.html.twig', [
            'entreprises' => $entreprisesEnAttente,
            'message' => $this->get('session')->getFlashBag()->get('message', [])
        ]);
    }

    #[Route('/admin/demandes/approuver/{email}', name: 'admin_demandes_approuver')]
    public function approuver(string $email): Response
    {
        $user = $this->userService->findOneByEmail($email);

        if ($user && $user->getType() === 'company') {
            $this->userService->validateUser($user);
            $this->addFlash('message', 'Entreprise approuvée avec succès !');
        } else {
            $this->addFlash('message', 'Échec de l\'approbation.');
        }

        return $this->redirectToRoute('admin_demandes');
    }

    #[Route('/admin/demandes/rejeter/{email}', name: 'admin_demandes_rejeter')]
    public function rejeter(string $email): Response
    {
        $user = $this->userService->findOneByEmail($email);

        if ($user && $user->getType() === 'company') {
            $this->userService->deleteUser($user);
            $this->addFlash('message', 'Entreprise rejetée avec succès !');
        } else {
            $this->addFlash('message', 'Échec du rejet.');
        }

        return $this->redirectToRoute('admin_demandes');
    }
}==================================================

Fichier: src/Controller/AdminGestionUtilisateursController.php
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/src/Controller/AdminGestionUtilisateursController.php
-----
<?php

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Security\Http\Attribute\IsGranted;

#[IsGranted('ROLE_ADMIN')] // 🔐 Accès réservé aux utilisateurs avec le rôle admin
class AdminGestionUtilisateursController extends AbstractController
{
    #[Route('/admin/gestion-utilisateurs', name: 'admin_gestion_utilisateurs')]
    public function index(): Response
    {
        return $this->render('admin/gestion_utilisateurs/index.html.twig');
    }

    #[Route('/admin/entreprises', name: 'admin_entreprises')]
    public function entreprises(): Response
    {
        // Exemple de données à remplacer par des données réelles (BDD ou service)
        $entreprises = [];

        return $this->render('admin/gestion_utilisateurs/entreprises.html.twig', [
            'entreprises' => $entreprises
        ]);
    }

    #[Route('/admin/chercheurs-emploi', name: 'admin_chercheurs_emploi')]
    public function chercheursEmploi(): Response
    {
        // Exemple de données à remplacer par des données réelles
        $chercheurs = [];

        return $this->render('admin/gestion_utilisateurs/chercheurs.html.twig', [
            'chercheurs' => $chercheurs
        ]);
    }

    #[Route('/admin/home', name: 'admin_home')]
    public function home(): Response
    {
        return $this->render('admin/home/index.html.twig'); // Page d'accueil admin
    }
}==================================================

Fichier: src/Controller/AdminHomeController.php
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/src/Controller/AdminHomeController.php
-----
<?php

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Security\Http\Attribute\IsGranted;

#[IsGranted('ROLE_ADMIN')] // 🔐 Protège l'accès à toutes les routes du contrôleur
#[Route('/admin')]
class AdminHomeController extends AbstractController
{
    #[Route('/', name: 'admin_home', methods: ['GET'])]
    public function index(): Response
    {
        return $this->render('admin/home/index.html.twig');
    }
}==================================================

Fichier: src/Controller/AdminToutesEntreprisesController.php
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/src/Controller/AdminToutesEntreprisesController.php
-----
<?php
// src/Controller/AdminToutesEntreprisesController.php

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Security\Http\Attribute\IsGranted;
use App\Repository\UserRepository;

#[IsGranted('ROLE_ADMIN')] // 🔐 Accès réservé aux admins
#[Route('/admin')]
class AdminToutesEntreprisesController extends AbstractController
{
#[Route('/entreprises', name: 'admin_toutes_entreprises', methods: ['GET'])]
public function index(UserRepository $userRepository): Response
{
// Récupère toutes les entreprises (type = 'company')
$entreprises = $userRepository->findBy(['type' => 'company']);

return $this->render('admin/toutes_entreprises/index.html.twig', [
'entreprises' => $entreprises,
]);
}
}==================================================

Fichier: src/Controller/CreateAdminController.php
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/src/Controller/CreateAdminController.php
-----
<?php
// src/Controller/CreateAdminController.php

namespace App\Controller;

use App\Entity\Administrateur;
use App\Form\AdministrateurType;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface; // Modification ici

class CreateAdminController extends AbstractController
{
    #[Route("/admin/create", name: "create_admin")]
    public function create(
        Request $request,
        EntityManagerInterface $entityManager,
        UserPasswordHasherInterface $passwordHasher // Modification ici
    ): Response
    {
        $administrateur = new Administrateur();
        $form = $this->createForm(AdministrateurType::class, $administrateur);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            // Récupération du mot de passe en clair
            $plainPassword = $administrateur->getMotdepasse();

            // Hachage avec la nouvelle interface
            $hashedPassword = $passwordHasher->hashPassword(
                $administrateur,
                $plainPassword
            );

            $administrateur->setMotdepasse($hashedPassword);

            $entityManager->persist($administrateur);
            $entityManager->flush();

            $this->addFlash('success', 'Administrateur créé avec succès !');
            return $this->redirectToRoute('app_login');
        }

        return $this->render('admin/create.html.twig', [
            'form' => $form->createView(),
        ]);
    }
}==================================================

Fichier: templates/admin/demandes/index.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/demandes/index.html.twig
-----
{# templates/admin/demandes/index.html.twig #}
{% extends 'admin/base-admin.html.twig' %}

{% block title %}Demandes des entreprises{% endblock %}

{% block content %}
    <h1 class="mb-4">Demandes d'entreprises en attente</h1>

    <table class="table table-bordered">
        <thead>
        <tr>
            <th>Email</th>
            <th>Nom de l'entreprise</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        {% for entreprise in entreprises %}
            <tr>
                <td>{{ entreprise.email }}</td>
                <td>{{ entreprise.nom }}</td>
                <td>
                    <a href="{{ path('admin_demandes_approuver', {'id': entreprise.id}) }}" class="btn btn-success btn-sm">Approuver</a>
                    <a href="{{ path('admin_demandes_rejeter', {'id': entreprise.id}) }}" class="btn btn-danger btn-sm">Rejeter</a>
                </td>
            </tr>
        {% else %}
            <tr><td colspan="3" class="text-center">Aucune demande trouvée.</td></tr>
        {% endfor %}
        </tbody>
    </table>
{% endblock %}==================================================

Fichier: templates/admin/GestionUtilisateurs/chercheurs.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/GestionUtilisateurs/chercheurs.html.twig
-----
{# templates/admin/gestion_utilisateurs/chercheurs.html.twig #}
{% extends 'admin/base-admin.html.twig' %}

{% block title %}Gestion des candidats{% endblock %}

{% block content %}
    <h1>Liste des candidats</h1>

    <table class="table table-bordered">
        <thead>
        <tr>
            <th>Nom complet</th>
            <th>Email</th>
            <th>Date d'inscription</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        {% if chercheurs|length > 0 %}
            {% for user in chercheurs %}
                <tr>
                    <td>{{ user.firstName }} {{ user.lastName }}</td>
                    <td>{{ user.email }}</td>
                    <td>{{ user.createdAt ? user.createdAt|date('d/m/Y') : '-' }}</td>
                    <td>
                        <a href="#" class="btn btn-sm btn-primary">Voir profil</a>
                    </td>
                </tr>
            {% endfor %}
        {% else %}
            <tr><td colspan="4" class="text-center">Aucun candidat trouvé.</td></tr>
        {% endif %}
        </tbody>
    </table>
{% endblock %}==================================================

Fichier: templates/admin/GestionUtilisateurs/entreprise.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/GestionUtilisateurs/entreprise.html.twig
-----
{# templates/admin/gestion_utilisateurs/entreprises.html.twig #}
{% extends 'admin/base-admin.html.twig' %}

{% block title %}Gestion des entreprises{% endblock %}

{% block content %}
    <h1>Liste des entreprises</h1>

    <table class="table table-bordered">
        <thead>
        <tr>
            <th>Nom</th>
            <th>Email</th>
            <th>Statut</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        {% if entreprises|length > 0 %}
            {% for entreprise in entreprises %}
                <tr>
                    <td>{{ entreprise.nom }}</td>
                    <td>{{ entreprise.email }}</td>
                    <td>
                        {% if entreprise.isApproved %}
                            <span class="badge bg-success">✅ Approuvée</span>
                        {% else %}
                            <span class="badge bg-warning text-dark">⏳ En attente</span>
                        {% endif %}
                    </td>
                    <td>
                        <a href="#" class="btn btn-sm btn-primary">Voir détails</a>
                    </td>
                </tr>
            {% endfor %}
        {% else %}
            <tr><td colspan="4" class="text-center">Aucune entreprise trouvée.</td></tr>
        {% endif %}
        </tbody>
    </table>
{% endblock %}==================================================

Fichier: templates/admin/GestionUtilisateurs/index.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/GestionUtilisateurs/index.html.twig
-----
{# templates/admin/gestion_utilisateurs/index.html.twig #}
{% extends 'admin/base-admin.html.twig' %}

{% block title %}Gestion des utilisateurs{% endblock %}

{% block content %}
    <h1>Gestion des utilisateurs</h1>

    <ul class="list-group">
        <li class="list-group-item">
            <a href="{{ path('admin_entreprises') }}">🏢 Gérer les entreprises</a>
        </li>
        <li class="list-group-item">
            <a href="{{ path('admin_chercheurs_emploi') }}">👤 Gérer les candidats</a>
        </li>
    </ul>
{% endblock %}==================================================

Fichier: templates/admin/base-admin.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/base-admin.html.twig
-----
{# templates/admin/base-admin.html.twig #}
{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap @5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
{% endblock %}

{% block body %}
    <div class="container-fluid">
        <!-- Navbar -->
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark mb-4 mt-2 rounded">
            <div class="container-fluid">
                <a class="navbar-brand" href="{{ path('admin_home') }}">Administration</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item"><a class="nav-link" href="{{ path('admin_home') }}">🏠 Accueil</a></li>
                        <li class="nav-item"><a class="nav-link" href="{{ path('admin_demandes') }}">📥 Demandes</a></li>
                        <li class="nav-item"><a class="nav-link" href="{{ path('admin_gestion_utilisateurs') }}">👥 Utilisateurs</a></li>
                    </ul>
                    <ul class="navbar-nav ms-auto">
                        <li class="nav-item">
                            <a class="nav-link" href="#">👤 Connecté en tant qu'Admin</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

        <!-- Messages Flash -->
        {% for label, messages in app.flashes(['success', 'danger']) %}
            {% for message in messages %}
                <div class="alert alert-{{ label == 'success' ? 'success' : 'danger' }} alert-dismissible fade show" role="alert">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            {% endfor %}
        {% endfor %}

        <!-- Contenu principal -->
        <div class="row">
            <div class="col-md-12">
                {% block content %}{% endblock %}
            </div>
        </div>
    </div>
{% endblock %}
<li class="nav-item"><a class="nav-link" href="{{ path('admin_toutes_entreprises') }}">🏢 Toutes les entreprises</a></li>==================================================

Fichier: templates/admin/create.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/create.html.twig
-----
{# templates/admin/create.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Créer un administrateur{% endblock %}

{% block body %}
    <div class="container mt-5">
        <h1>Créer un administrateur</h1>

        {# Messages flash #}
        {% for message in app.flashes('error') %}
            <div class="alert alert-danger">{{ message }}</div>
        {% endfor %}

        {% for message in app.flashes('success') %}
            <div class="alert alert-success">{{ message }}</div>
        {% endfor %}

        {# Formulaire Symfony #}
        {{ form_start(form) }}
        <div class="mb-3">
            {{ form_label(form.username) }}
            {{ form_widget(form.username, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.username) }}
        </div>

        <div class="mb-3">
            {{ form_label(form.email) }}
            {{ form_widget(form.email, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.email) }}
        </div>

        <div class="mb-3">
            {{ form_label(form.motdepasse) }}
            {{ form_widget(form.motdepasse, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.motdepasse) }}
        </div>

        <div class="mb-3">
            {{ form_label(form.prenom) }}
            {{ form_widget(form.prenom, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.prenom) }}
        </div>

        <div class="mb-3">
            {{ form_label(form.nomComplet) }}
            {{ form_widget(form.nomComplet, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.nomComplet) }}
        </div>

        <button type="submit" class="btn btn-primary">Créer</button>
        {{ form_end(form) }}
    </div>
{% endblock %}==================================================

Fichier: templates/admin/index.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/index.html.twig
-----
{# templates/admin/index.html.twig #}
{% extends 'admin/base-admin.html.twig' %}

{% block title %}Tableau de bord Admin{% endblock %}

{% block content %}
    <h1 class="mb-4">Tableau de bord Administrateur</h1>

    <div class="row">
        <div class="col-md-6">
            <h2>Candidats</h2>
            <table class="table table-bordered">
                <thead>
                <tr>
                    <th>Nom complet</th>
                    <th>Email</th>
                </tr>
                </thead>
                <tbody>
                {% for user in jobSeekers %}
                    <tr>
                        <td>{{ user.firstName }} {{ user.lastName }}</td>
                        <td>{{ user.email }}</td>
                    </tr>
                {% else %}
                    <tr><td colspan="2">Aucun candidat trouvé.</td></tr>
                {% endfor %}
                </tbody>
            </table>
        </div>

        <div class="col-md-6">
            <h2>Entreprises en attente</h2>
            <table class="table table-bordered">
                <thead>
                <tr>
                    <th>Email</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                {% for company in companies if not company.isApproved %}
                    <tr>
                        <td>{{ company.email }}</td>
                        <td>
                            <a href="{{ path('admin_approve_company', {'id': company.id}) }}" class="btn btn-success btn-sm">✅ Approuver</a>
                            <a href="{{ path('admin_reject_company', {'id': company.id}) }}" class="btn btn-danger btn-sm">❌ Rejeter</a>
                        </td>
                    </tr>
                {% else %}
                    <tr><td colspan="2">Aucune entreprise en attente.</td></tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
{% endblock %}==================================================

Fichier: src/Controller/AdminController.php
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/src/Controller/AdminController.php
-----
<?php
// src/Controller/AdminController.php

namespace App\Controller;

use App\Entity\User;
use App\Repository\UserRepository;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

#[Route('/admin')]
class AdminController extends AbstractController
{
#[Route('/', name: 'admin_dashboard')]
public function index(UserRepository $userRepo): Response
{
$jobSeekers = $userRepo->findBy(['type' => 'job_seeker']);
$companies = $userRepo->findBy(['type' => 'company']);

return $this->render('admin/index.html.twig', [
'jobSeekers' => $jobSeekers,
'companies' => $companies,
]);
}

#[Route('/company/approve/{id}', name: 'admin_approve_company')]
public function approveCompany(User $user, EntityManagerInterface $em): RedirectResponse
{
$user->setIsApproved(true);
$em->flush();

$this->addFlash('success', 'Entreprise approuvée avec succès !');
return $this->redirectToRoute('admin_dashboard');
}

#[Route('/company/reject/{id}', name: 'admin_reject_company')]
public function rejectCompany(User $user, EntityManagerInterface $em): RedirectResponse
{
$em->remove($user);
$em->flush();

$this->addFlash('danger', 'Entreprise rejetée.');
return $this->redirectToRoute('admin_dashboard');
}
}
==================================================

Fichier: src/Controller/AdminDemandesController.php
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/src/Controller/AdminDemandesController.php
-----
<?php

namespace App\Controller;

use App\Service\UserService;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Security\Http\Attribute\IsGranted;

#[IsGranted('ROLE_ADMIN')]
class AdminDemandesController extends AbstractController
{
    private $userService;

    public function __construct(UserService $userService)
    {
        $this->userService = $userService;
    }

    #[Route('/admin/demandes', name: 'admin_demandes')]
    public function index(): Response
    {
        // Utilisez ROLE_COMPANY car c'est le rôle défini dans votre User entity
        $entreprises = $this->userService->findUsersByRole('ROLE_COMPANY');

        // Filtrer les entreprises non approuvées
        $entreprisesEnAttente = array_filter($entreprises, function($user) {
            return !$user->isApproved();
        });

        return $this->render('admin/demandes/index.html.twig', [
            'entreprises' => $entreprisesEnAttente
        ]);
    }

    #[Route('/admin/demandes/approuver/{email}', name: 'admin_demandes_approuver', methods: ['POST'])]
    public function approuver(Request $request, string $email): Response
    {
        if (!$this->isCsrfTokenValid('approve_company', $request->request->get('_token'))) {
            $this->addFlash('error', 'Token CSRF invalide.');
            return $this->redirectToRoute('admin_demandes');
        }

        $user = $this->userService->findOneByEmail($email);

        if (!$user) {
            $this->addFlash('error', 'Entreprise non trouvée.');
            return $this->redirectToRoute('admin_demandes');
        }

        try {
            $this->userService->validateUser($user);
            $this->addFlash('success', 'Entreprise approuvée avec succès !');
        } catch (\Exception $e) {
            $this->addFlash('error', 'Une erreur est survenue lors de l\'approbation.');
        }

        return $this->redirectToRoute('admin_demandes');
    }

    #[Route('/admin/demandes/rejeter/{email}', name: 'admin_demandes_rejeter', methods: ['POST'])]
    public function rejeter(Request $request, string $email): Response
    {
        if (!$this->isCsrfTokenValid('reject_company', $request->request->get('_token'))) {
            $this->addFlash('error', 'Token CSRF invalide.');
            return $this->redirectToRoute('admin_demandes');
        }

        $user = $this->userService->findOneByEmail($email);

        if (!$user) {
            $this->addFlash('error', 'Entreprise non trouvée.');
            return $this->redirectToRoute('admin_demandes');
        }

        try {
            $this->userService->deleteUser($user);
            $this->addFlash('success', 'Entreprise rejetée avec succès.');
        } catch (\Exception $e) {
            $this->addFlash('error', 'Une erreur est survenue lors du rejet.');
        }

        return $this->redirectToRoute('admin_demandes');
    }
}==================================================

Fichier: src/Controller/AdminGestionUtilisateursController.php
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/src/Controller/AdminGestionUtilisateursController.php
-----
<?php

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Security\Http\Attribute\IsGranted;

#[IsGranted('ROLE_ADMIN')] // 🔐 Accès réservé aux utilisateurs avec le rôle admin
class AdminGestionUtilisateursController extends AbstractController
{
    #[Route('/admin/gestion-utilisateurs', name: 'admin_gestion_utilisateurs')]
    public function index(): Response
    {
        return $this->render('admin/gestion_utilisateurs/index.html.twig');
    }

    #[Route('/admin/entreprises', name: 'admin_entreprises')]
    public function entreprises(): Response
    {
        // Exemple de données à remplacer par des données réelles (BDD ou service)
        $entreprises = [];

        return $this->render('admin/gestion_utilisateurs/entreprises.html.twig', [
            'entreprises' => $entreprises
        ]);
    }

    #[Route('/admin/chercheurs-emploi', name: 'admin_chercheurs_emploi')]
    public function chercheursEmploi(): Response
    {
        // Exemple de données à remplacer par des données réelles
        $chercheurs = [];

        return $this->render('admin/gestion_utilisateurs/chercheurs.html.twig', [
            'chercheurs' => $chercheurs
        ]);
    }

    #[Route('/admin/home', name: 'admin_home')]
    public function home(): Response
    {
        return $this->render('admin/home/index.html.twig'); // Page d'accueil admin
    }
}==================================================

Fichier: src/Controller/AdminHomeController.php
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/src/Controller/AdminHomeController.php
-----
<?php

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Security\Http\Attribute\IsGranted;

#[IsGranted('ROLE_ADMIN')] // 🔐 Protège l'accès à toutes les routes du contrôleur
#[Route('/admin')]
class AdminHomeController extends AbstractController
{
    #[Route('/', name: 'admin_home', methods: ['GET'])]
    public function index(): Response
    {
        return $this->render('admin/home/index.html.twig');
    }
}==================================================

Fichier: src/Controller/AdminToutesEntreprisesController.php
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/src/Controller/AdminToutesEntreprisesController.php
-----
<?php
// src/Controller/AdminToutesEntreprisesController.php

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Security\Http\Attribute\IsGranted;
use App\Repository\UserRepository;

#[IsGranted('ROLE_ADMIN')] // 🔐 Accès réservé aux admins
#[Route('/admin')]
class AdminToutesEntreprisesController extends AbstractController
{
#[Route('/entreprises', name: 'admin_toutes_entreprises', methods: ['GET'])]
public function index(UserRepository $userRepository): Response
{
// Récupère toutes les entreprises (type = 'company')
$entreprises = $userRepository->findBy(['type' => 'company']);

return $this->render('admin/toutes_entreprises/index.html.twig', [
'entreprises' => $entreprises,
]);
}
}==================================================

Fichier: src/Controller/CreateAdminController.php
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/src/Controller/CreateAdminController.php
-----
<?php
// src/Controller/CreateAdminController.php

namespace App\Controller;

use App\Entity\Administrateur;
use App\Form\AdministrateurType;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface; // Modification ici

class CreateAdminController extends AbstractController
{
    #[Route("/admin/create", name: "create_admin")]
    public function create(
        Request $request,
        EntityManagerInterface $entityManager,
        UserPasswordHasherInterface $passwordHasher // Modification ici
    ): Response
    {
        $administrateur = new Administrateur();
        $form = $this->createForm(AdministrateurType::class, $administrateur);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            // Récupération du mot de passe en clair
            $plainPassword = $administrateur->getMotdepasse();

            // Hachage avec la nouvelle interface
            $hashedPassword = $passwordHasher->hashPassword(
                $administrateur,
                $plainPassword
            );

            $administrateur->setMotdepasse($hashedPassword);

            $entityManager->persist($administrateur);
            $entityManager->flush();

            $this->addFlash('success', 'Administrateur créé avec succès !');
            return $this->redirectToRoute('app_login');
        }

        return $this->render('admin/create.html.twig', [
            'form' => $form->createView(),
        ]);
    }
}==================================================

Fichier: templates/admin/demandes/index.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/demandes/index.html.twig
-----
{# templates/admin/demandes/index.html.twig #}
{% extends 'admin/base-admin.html.twig' %}

{% block title %}Demandes des entreprises{% endblock %}

{% block content %}
    <div class="container py-4">
        <h1 class="mb-4">Demandes d'entreprises en attente</h1>

        {% if entreprises|length > 0 %}
            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <thead class="table-light">
                    <tr>
                        <th>Email</th>
                        <th>Nom de l'entreprise</th>
                        <th>Nom d'utilisateur</th>
                        <th>Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for entreprise in entreprises %}
                        <tr>
                            <td>{{ entreprise.email }}</td>
                            <td>{{ entreprise.companyName ?? '-' }}</td>
                            <td>{{ entreprise.username }}</td>
                            <td class="text-center">
                                <form method="POST" action="{{ path('admin_demandes_approuver', {'email': entreprise.email}) }}" class="d-inline">
                                    <input type="hidden" name="_token" value="{{ csrf_token('approve_company') }}">
                                    <button type="submit" class="btn btn-success btn-sm"
                                            onclick="return confirm('Voulez-vous vraiment approuver cette entreprise ?')">
                                        ✅ Approuver
                                    </button>
                                </form>

                                <form method="POST" action="{{ path('admin_demandes_rejeter', {'email': entreprise.email}) }}" class="d-inline">
                                    <input type="hidden" name="_token" value="{{ csrf_token('reject_company') }}">
                                    <button type="submit" class="btn btn-danger btn-sm"
                                            onclick="return confirm('Voulez-vous vraiment rejeter cette entreprise ? Cette action est irréversible.')">
                                        ❌ Rejeter
                                    </button>
                                </form>
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
        {% else %}
            <div class="alert alert-info">
                <i class="fas fa-info-circle"></i> Aucune demande d'entreprise en attente.
            </div>
        {% endif %}
    </div>
{% endblock %}==================================================

Fichier: templates/admin/GestionUtilisateurs/chercheurs.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/GestionUtilisateurs/chercheurs.html.twig
-----
{# templates/admin/gestion_utilisateurs/chercheurs.html.twig #}
{% extends 'admin/base-admin.html.twig' %}

{% block title %}Gestion des candidats{% endblock %}

{% block content %}
    <h1>Liste des candidats</h1>

    <table class="table table-bordered">
        <thead>
        <tr>
            <th>Nom complet</th>
            <th>Email</th>
            <th>Date d'inscription</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        {% if chercheurs|length > 0 %}
            {% for user in chercheurs %}
                <tr>
                    <td>{{ user.firstName }} {{ user.lastName }}</td>
                    <td>{{ user.email }}</td>
                    <td>{{ user.createdAt ? user.createdAt|date('d/m/Y') : '-' }}</td>
                    <td>
                        <a href="#" class="btn btn-sm btn-primary">Voir profil</a>
                    </td>
                </tr>
            {% endfor %}
        {% else %}
            <tr><td colspan="4" class="text-center">Aucun candidat trouvé.</td></tr>
        {% endif %}
        </tbody>
    </table>
{% endblock %}==================================================

Fichier: templates/admin/GestionUtilisateurs/entreprise.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/GestionUtilisateurs/entreprise.html.twig
-----
{# templates/admin/gestion_utilisateurs/entreprises.html.twig #}
{% extends 'admin/base-admin.html.twig' %}

{% block title %}Gestion des entreprises{% endblock %}

{% block content %}
    <h1>Liste des entreprises</h1>

    <table class="table table-bordered">
        <thead>
        <tr>
            <th>Nom</th>
            <th>Email</th>
            <th>Statut</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        {% if entreprises|length > 0 %}
            {% for entreprise in entreprises %}
                <tr>
                    <td>{{ entreprise.nom }}</td>
                    <td>{{ entreprise.email }}</td>
                    <td>
                        {% if entreprise.isApproved %}
                            <span class="badge bg-success">✅ Approuvée</span>
                        {% else %}
                            <span class="badge bg-warning text-dark">⏳ En attente</span>
                        {% endif %}
                    </td>
                    <td>
                        <a href="#" class="btn btn-sm btn-primary">Voir détails</a>
                    </td>
                </tr>
            {% endfor %}
        {% else %}
            <tr><td colspan="4" class="text-center">Aucune entreprise trouvée.</td></tr>
        {% endif %}
        </tbody>
    </table>
{% endblock %}==================================================

Fichier: templates/admin/GestionUtilisateurs/index.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/GestionUtilisateurs/index.html.twig
-----
{# templates/admin/gestion_utilisateurs/index.html.twig #}
{% extends 'admin/base-admin.html.twig' %}

{% block title %}Gestion des utilisateurs{% endblock %}

{% block content %}
    <h1>Gestion des utilisateurs</h1>

    <ul class="list-group">
        <li class="list-group-item">
            <a href="{{ path('admin_entreprises') }}">🏢 Gérer les entreprises</a>
        </li>
        <li class="list-group-item">
            <a href="{{ path('admin_chercheurs_emploi') }}">👤 Gérer les candidats</a>
        </li>
    </ul>
{% endblock %}==================================================

Fichier: templates/admin/base-admin.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/base-admin.html.twig
-----
{# templates/admin/base-admin.html.twig #}
{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap @5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
{% endblock %}

{% block body %}
    <div class="container-fluid">
        <!-- Navbar -->
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark mb-4 mt-2 rounded">
            <div class="container-fluid">
                <a class="navbar-brand" href="{{ path('admin_home') }}">Administration</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item"><a class="nav-link" href="{{ path('admin_home') }}">🏠 Accueil</a></li>
                        <li class="nav-item"><a class="nav-link" href="{{ path('admin_demandes') }}">📥 Demandes</a></li>
                        <li class="nav-item"><a class="nav-link" href="{{ path('admin_gestion_utilisateurs') }}">👥 Utilisateurs</a></li>
                    </ul>
                    <ul class="navbar-nav ms-auto">
                        <li class="nav-item">
                            <a class="nav-link" href="#">👤 Connecté en tant qu'Admin</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

        <!-- Messages Flash -->
        {% for label, messages in app.flashes(['success', 'danger']) %}
            {% for message in messages %}
                <div class="alert alert-{{ label == 'success' ? 'success' : 'danger' }} alert-dismissible fade show" role="alert">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            {% endfor %}
        {% endfor %}

        <!-- Contenu principal -->
        <div class="row">
            <div class="col-md-12">
                {% block content %}{% endblock %}
            </div>
        </div>
    </div>
{% endblock %}
<li class="nav-item"><a class="nav-link" href="{{ path('admin_toutes_entreprises') }}">🏢 Toutes les entreprises</a></li>==================================================

Fichier: templates/admin/create.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/create.html.twig
-----
{# templates/admin/create.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Créer un administrateur{% endblock %}

{% block body %}
    <div class="container mt-5">
        <h1>Créer un administrateur</h1>

        {# Messages flash #}
        {% for message in app.flashes('error') %}
            <div class="alert alert-danger">{{ message }}</div>
        {% endfor %}

        {% for message in app.flashes('success') %}
            <div class="alert alert-success">{{ message }}</div>
        {% endfor %}

        {# Formulaire Symfony #}
        {{ form_start(form) }}
        <div class="mb-3">
            {{ form_label(form.username) }}
            {{ form_widget(form.username, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.username) }}
        </div>

        <div class="mb-3">
            {{ form_label(form.email) }}
            {{ form_widget(form.email, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.email) }}
        </div>

        <div class="mb-3">
            {{ form_label(form.motdepasse) }}
            {{ form_widget(form.motdepasse, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.motdepasse) }}
        </div>

        <div class="mb-3">
            {{ form_label(form.prenom) }}
            {{ form_widget(form.prenom, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.prenom) }}
        </div>

        <div class="mb-3">
            {{ form_label(form.nomComplet) }}
            {{ form_widget(form.nomComplet, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.nomComplet) }}
        </div>

        <button type="submit" class="btn btn-primary">Créer</button>
        {{ form_end(form) }}
    </div>
{% endblock %}==================================================

Fichier: templates/admin/index.html.twig
Chemin complet: /Users/fadilimeme/Desktop/esprimcareer/workshope/templates/admin/index.html.twig
-----
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>{% block title %}Welcome!{% endblock %}</title>
    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text></svg>">

    {# Bootstrap CSS #}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    {% block stylesheets %}
        <style>
            .sidebar {
                min-height: 100vh;
                background-color: #343a40;
                padding-top: 20px;
            }
            .sidebar a {
                color: white;
                text-decoration: none;
                display: block;
                padding: 10px 15px;
            }
            .sidebar a:hover {
                background-color: #495057;
            }
            .main-content {
                padding: 20px;
            }
        </style>
    {% endblock %}
</head>
<body>
<div class="container-fluid">
    <div class="row">
        {# Sidebar #}
        <div class="col-md-2 sidebar">
            <h3 class="text-white mb-4">Admin Panel</h3>
            <nav>
                <a href="{{ path('admin_home') }}">Tableau de bord</a>
                <a href="{{ path('admin_companies') }}">Entreprises</a>
                <a href="{{ path('admin_job_seekers') }}">Candidats</a>
                <a href="{{ path('app_logout') }}">Déconnexion</a>
            </nav>
        </div>

        {# Main content #}
        <div class="col-md-10 main-content">
            {% block content %}{% endblock %}
        </div>
    </div>
</div>

{# Bootstrap JS and dependencies #}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

{# Remove the parent() call since we're not extending base.html.twig anymore #}
{% block javascripts %}{% endblock %}
</body>
</html>==================================================

